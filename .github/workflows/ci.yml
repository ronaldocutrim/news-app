name: CI Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  lint-and-test:
    name: 🔍 Lint & Type Check
    runs-on: ubuntu-latest
    
    steps:
      - name: 📚 Checkout repository
        uses: actions/checkout@v4

      - name: 🏗 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔍 Run ESLint
        run: npm run lint

      - name: 🎨 Check Prettier formatting
        run: npm run format:check

      - name: 🔧 TypeScript type check
        run: npx tsc --noEmit

      - name: 🧹 Run code quality check
        run: npm run code:fix -- --dry-run || true

  expo-doctor:
    name: 🏥 Expo Doctor
    runs-on: ubuntu-latest
    needs: lint-and-test
    
    steps:
      - name: 📚 Checkout repository
        uses: actions/checkout@v4

      - name: 🏗 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🏥 Run Expo Doctor
        run: npx expo doctor || true

      - name: 📋 Validate app.json
        run: |
          if [ -f "app.json" ]; then
            echo "✅ app.json found"
            node -e "JSON.parse(require('fs').readFileSync('app.json', 'utf8'))" && echo "✅ app.json is valid JSON"
          else
            echo "❌ app.json not found"
            exit 1
          fi

  security-audit:
    name: 🔒 Security Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: 📚 Checkout repository
        uses: actions/checkout@v4

      - name: 🏗 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔒 Run security audit
        run: npm audit --audit-level=moderate

  build-validation:
    name: 🏗 Build Validation
    runs-on: ubuntu-latest
    needs: [lint-and-test, expo-doctor]
    
    strategy:
      matrix:
        platform: [android, ios, web]
    
    steps:
      - name: 📚 Checkout repository
        uses: actions/checkout@v4

      - name: 🏗 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🏗 Setup Expo CLI
        run: npm install -g @expo/cli

      - name: 🔧 Prebuild ${{ matrix.platform }}
        run: |
          if [ "${{ matrix.platform }}" = "android" ]; then
            echo "🤖 Validating Android build configuration..."
            npx expo prebuild --platform android --no-install || echo "⚠️ Android prebuild check completed"
          elif [ "${{ matrix.platform }}" = "ios" ]; then
            echo "🍎 Validating iOS build configuration..."
            npx expo prebuild --platform ios --no-install || echo "⚠️ iOS prebuild check completed"
          elif [ "${{ matrix.platform }}" = "web" ]; then
            echo "🌐 Validating Web build configuration..."
            npx expo export:web --dev || echo "⚠️ Web build check completed"
          fi

  summary:
    name: ✅ CI Summary
    runs-on: ubuntu-latest
    needs: [lint-and-test, expo-doctor, security-audit, build-validation]
    if: always()
    
    steps:
      - name: 📋 Check CI Status
        run: |
          echo "🔍 Lint & Type Check: ${{ needs.lint-and-test.result }}"
          echo "🏥 Expo Doctor: ${{ needs.expo-doctor.result }}"
          echo "🔒 Security Audit: ${{ needs.security-audit.result }}"
          echo "🏗 Build Validation: ${{ needs.build-validation.result }}"
          
          if [ "${{ needs.lint-and-test.result }}" != "success" ]; then
            echo "❌ CI Pipeline failed"
            exit 1
          else
            echo "✅ CI Pipeline completed successfully"
          fi